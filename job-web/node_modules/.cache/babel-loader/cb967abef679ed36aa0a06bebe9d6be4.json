{"remainingRequest":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\babel-loader\\lib\\index.js!D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\src\\views\\dict\\Dict.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\src\\views\\dict\\Dict.vue","mtime":1645335817412},{"path":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\babel.config.js","mtime":1645335806369},{"path":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdHlwZV9xdWVyeSwgZGljdF9xdWVyeSwgZGVsIH0gZnJvbSAnLi4vLi4vYXBpL2RpY3QnOwppbXBvcnQgUlRhYmxlIGZyb20gIi4uLy4uL2NvbXBvbmVudHMvUlRhYmxlIjsKaW1wb3J0IEFkZCBmcm9tICIuL0FkZCI7CmltcG9ydCBFZGl0IGZyb20gIi4vRWRpdCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiRGljdCIsCiAgY29tcG9uZW50czogewogICAgRWRpdCwKICAgIEFkZCwKICAgIFJUYWJsZQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHR5cGVUYWJsZURhdGE6IFtdLAogICAgICBhY3RpdmU6IDAsCiAgICAgIHNlbGVjdFR5cGVJZDogMCwKICAgICAgdHlwZVRhYmxlQ29sczogW3sKICAgICAgICBwcm9wOiAnbmFtZScsCiAgICAgICAgbGFiZWw6ICfnsbvlnovlkI3np7AnCiAgICAgIH1dLAogICAgICBkaWN0VGFibGVEYXRhOiBbXSwKICAgICAgZGljdFRhYmxlQ29sczogW3sKICAgICAgICBwcm9wOiAnZGljdEtleScsCiAgICAgICAgbGFiZWw6ICflrZflhbjlkI3np7AnCiAgICAgIH0sIHsKICAgICAgICBwcm9wOiAnZGljdFZhbCcsCiAgICAgICAgbGFiZWw6ICflrZflhbjlgLwnCiAgICAgIH0sIHsKICAgICAgICBwcm9wOiAnc3RhdHVzJywKICAgICAgICBsYWJlbDogJ+eKtuaAgScsCiAgICAgICAgc2xvdDogJ3Nsb3Rfc3RhdHVzJwogICAgICB9LCB7CiAgICAgICAgcHJvcDogJ3NvcnQnLAogICAgICAgIGxhYmVsOiAn5bqP5Y+3JywKICAgICAgICB3aWR0aDogMTAwCiAgICAgIH1dLAogICAgICBhZGQ6IHsKICAgICAgICB2aXNpYmxlOiBmYWxzZSwKICAgICAgICBjbG9zZTogdGhpcy5jbG9zZSwKICAgICAgICBjYWxsYmFjazogdGhpcy5yZWxvYWQKICAgICAgfSwKICAgICAgZWRpdDogewogICAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICAgIGNsb3NlOiB0aGlzLmNsb3NlLAogICAgICAgIGNhbGxiYWNrOiB0aGlzLnJlbG9hZCwKICAgICAgICBmb3JtOiBudWxsCiAgICAgIH0KICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgdHlwZV9xdWVyeSh7fSkudGhlbihyZXMgPT4gewogICAgICB0aGlzLnR5cGVUYWJsZURhdGEgPSByZXMuZGF0YTsKICAgICAgdGhpcy5zZWxlY3RUeXBlSWQgPSB0aGlzLnR5cGVUYWJsZURhdGFbMF0uaWQ7CiAgICB9KTsKICAgIHRoaXMubGlzdCh7CiAgICAgIHR5cGVJZDogdGhpcy5zZWxlY3RUeXBlSWQKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlKCkgewogICAgICB0aGlzLmFkZC52aXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICB1cGRhdGUoKSB7CiAgICAgIGxldCBzZWxlY3Rpb25zID0gdGhpcy4kcmVmc1snbXV0aXBsZVRhYmxlJ10uc2VsZWN0aW9uOwogICAgICBpZiAoc2VsZWN0aW9ucy5sZW5ndGggPT0gMSkgewogICAgICAgIHRoaXMuZWRpdC52aXNpYmxlID0gdHJ1ZTsKICAgICAgICB0aGlzLmVkaXQuZm9ybSA9IHNlbGVjdGlvbnNbMF07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCLor7fpgInmi6nkuIDmnaHmlbDmja7ov5vooYzkv67mlLkiKTsKICAgICAgfQogICAgfSwKICAgIHJlbG9hZCgpIHsKICAgICAgdGhpcy5saXN0KHsKICAgICAgICB0eXBlSWQ6IHRoaXMuc2VsZWN0VHlwZUlkCiAgICAgIH0pOwogICAgfSwKICAgIGxpc3QocGFyYW0pIHsKICAgICAgZGljdF9xdWVyeShwYXJhbSkudGhlbihyZXMgPT4gewogICAgICAgIHRoaXMuZGljdFRhYmxlRGF0YSA9IHJlcy5kYXRhOwogICAgICB9KTsKICAgIH0sCiAgICBjbG9zZSgpIHsKICAgICAgdGhpcy5hZGQudmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLmVkaXQudmlzaWJsZSA9IGZhbHNlOwogICAgfSwKICAgIGRlbCgpIHsKICAgICAgbGV0IHNlbGVjdGlvbnMgPSB0aGlzLiRyZWZzWydtdXRpcGxlVGFibGUnXS5zZWxlY3Rpb247CiAgICAgIGlmIChzZWxlY3Rpb25zLmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLiRjb25maXJtKCLnoa7lrprmnInliKDpmaTlkJfvvJ8iLCAi5Yig6Zmk5o+Q56S6IikudGhlbigoKSA9PiB7CiAgICAgICAgICBsZXQgYXJyID0gc2VsZWN0aW9ucy5tYXAoaXRlbSA9PiBpdGVtLmlkKTsKICAgICAgICAgIGxldCBpZHMgPSBhcnIuam9pbignLCcpOwogICAgICAgICAgZGVsKGlkcykudGhlbihyZXMgPT4gewogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAgIHRoaXMucmVsb2FkKCk7CiAgICAgICAgICB9KS5jYXRjaCgoKSA9PiB7fSk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCLor7fpgInmi6nopoHliKDpmaTnmoTmlbDmja4iKTsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZVR5cGUoaW5kZXgsIHR5cGVJZCkgewogICAgICB0aGlzLmFjdGl2ZSA9IGluZGV4OwogICAgICB0aGlzLnNlbGVjdFR5cGVJZCA9IHR5cGVJZDsKICAgICAgdGhpcy5saXN0KHsKICAgICAgICB0eXBlSWQ6IHR5cGVJZAogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"names":["type_query","dict_query","del","RTable","Add","Edit","name","components","data","typeTableData","active","selectTypeId","typeTableCols","prop","label","dictTableData","dictTableCols","slot","width","add","visible","close","callback","reload","edit","form","mounted","then","res","id","list","typeId","methods","create","update","selections","$refs","selection","length","$message","warning","param","$confirm","arr","map","item","ids","join","success","msg","catch","handleType","index"],"sources":["src/views/dict/Dict.vue"],"sourcesContent":["<template>\r\n    <div style=\"background: #f2f2f2\">\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"5\">\r\n                <el-card>\r\n                    <ul class=\"type\">\r\n                        <li @click=\"handleType(index,item.id)\" :class=\"active==index?'active':''\"\r\n                            v-for=\"(item,index) in typeTableData\" :key=\"index\">\r\n                            {{item.name}}\r\n                        </li>\r\n                    </ul>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"19\">\r\n                <el-card>\r\n                    <div class=\"btn-panel\">\r\n                        <el-button size=\"small\" type=\"primary\" icon=\"el-icon-plus\" @click=\"create\">新增</el-button>\r\n                        <el-button size=\"small\" type=\"primary\" icon=\"el-icon-edit\" @click=\"update\">修改</el-button>\r\n                        <el-button size=\"small\" type=\"danger\" icon=\"el-icon-delete\" @click=\"del\">删除</el-button>\r\n                    </div>\r\n                    <r-table ref=\"mutipleTable\" :table-data=\"dictTableData\" :table-cols=\"dictTableCols\">\r\n                        <template slot=\"slot_status\" slot-scope=\"scope\">\r\n                            <el-tag v-if=\"scope.data.status==0\" type=\"success\" size=\"mini\">正常</el-tag>\r\n                            <el-tag v-else type=\"danger\" size=\"mini\">停用</el-tag>\r\n                        </template>\r\n                    </r-table>\r\n                </el-card>\r\n                <Add v-if=\"add.visible\" :param=\"add\" :typeId=\"selectTypeId\"></Add>\r\n                <Edit v-if=\"edit.visible\" :param=\"edit\" :typeId=\"selectTypeId\"></Edit>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {type_query, dict_query, del} from '../../api/dict';\r\n    import RTable from \"../../components/RTable\";\r\n    import Add from \"./Add\";\r\n    import Edit from \"./Edit\";\r\n\r\n    export default {\r\n        name: \"Dict\",\r\n        components: {Edit, Add, RTable},\r\n        data() {\r\n            return {\r\n                typeTableData: [],\r\n                active: 0,\r\n                selectTypeId: 0,\r\n                typeTableCols: [\r\n                    {prop: 'name', label: '类型名称'}\r\n                ],\r\n                dictTableData: [],\r\n                dictTableCols: [\r\n                    {prop: 'dictKey', label: '字典名称'},\r\n                    {prop: 'dictVal', label: '字典值'},\r\n                    {prop: 'status', label: '状态', slot: 'slot_status'},\r\n                    {prop: 'sort', label: '序号', width: 100},\r\n                ],\r\n                add: {\r\n                    visible: false,\r\n                    close: this.close,\r\n                    callback: this.reload\r\n                },\r\n                edit: {\r\n                    visible: false,\r\n                    close: this.close,\r\n                    callback: this.reload,\r\n                    form: null\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            type_query({}).then(res => {\r\n                this.typeTableData = res.data;\r\n                this.selectTypeId = this.typeTableData[0].id;\r\n            })\r\n            this.list({typeId: this.selectTypeId})\r\n        },\r\n        methods: {\r\n            create() {\r\n                this.add.visible = true;\r\n            },\r\n            update() {\r\n                let selections = this.$refs['mutipleTable'].selection;\r\n                if (selections.length == 1) {\r\n                    this.edit.visible = true;\r\n                    this.edit.form = selections[0];\r\n                } else {\r\n                    this.$message.warning(\"请选择一条数据进行修改\");\r\n                }\r\n            },\r\n            reload() {\r\n                this.list({typeId: this.selectTypeId})\r\n            },\r\n            list(param) {\r\n                dict_query(param).then(res => {\r\n                    this.dictTableData = res.data;\r\n                })\r\n            },\r\n            close() {\r\n                this.add.visible = false;\r\n                this.edit.visible = false;\r\n            },\r\n            del() {\r\n                let selections = this.$refs['mutipleTable'].selection;\r\n                if (selections.length > 0) {\r\n                    this.$confirm(\"确定有删除吗？\", \"删除提示\").then(() => {\r\n                        let arr = selections.map(item => item.id);\r\n                        let ids = arr.join(',');\r\n                        del(ids).then(res => {\r\n                            this.$message.success(res.msg);\r\n                            this.reload();\r\n                        }).catch(() => {\r\n                        })\r\n                    })\r\n                } else {\r\n                    this.$message.warning(\"请选择要删除的数据\");\r\n                }\r\n            },\r\n            handleType(index, typeId) {\r\n                this.active = index;\r\n                this.selectTypeId = typeId;\r\n                this.list({typeId: typeId})\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .type {\r\n        list-style: none;\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    .type li {\r\n        height: 40px;\r\n        padding-left: 20px;\r\n        line-height: 40px;\r\n        box-sizing: border-box;\r\n        cursor: pointer;\r\n        font-size: 14px;\r\n    }\r\n\r\n    .type .active {\r\n        background-color: #009399;\r\n        color: #ffffff;\r\n        border-radius: 10px;\r\n    }\r\n</style>"],"mappings":"AAmCA,SAAAA,UAAA,EAAAC,UAAA,EAAAC,GAAA;AACA,OAAAC,MAAA;AACA,OAAAC,GAAA;AACA,OAAAC,IAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF,IAAA;IAAAD,GAAA;IAAAD;EAAA;EACAK,KAAA;IACA;MACAC,aAAA;MACAC,MAAA;MACAC,YAAA;MACAC,aAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,EACA;MACAC,aAAA;MACAC,aAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;QAAAG,IAAA;MAAA,GACA;QAAAJ,IAAA;QAAAC,KAAA;QAAAI,KAAA;MAAA,EACA;MACAC,GAAA;QACAC,OAAA;QACAC,KAAA,OAAAA,KAAA;QACAC,QAAA,OAAAC;MACA;MACAC,IAAA;QACAJ,OAAA;QACAC,KAAA,OAAAA,KAAA;QACAC,QAAA,OAAAC,MAAA;QACAE,IAAA;MACA;IACA;EACA;EACAC,QAAA;IACA1B,UAAA,KAAA2B,IAAA,CAAAC,GAAA;MACA,KAAAnB,aAAA,GAAAmB,GAAA,CAAApB,IAAA;MACA,KAAAG,YAAA,QAAAF,aAAA,IAAAoB,EAAA;IACA;IACA,KAAAC,IAAA;MAAAC,MAAA,OAAApB;IAAA;EACA;EACAqB,OAAA;IACAC,OAAA;MACA,KAAAd,GAAA,CAAAC,OAAA;IACA;IACAc,OAAA;MACA,IAAAC,UAAA,QAAAC,KAAA,iBAAAC,SAAA;MACA,IAAAF,UAAA,CAAAG,MAAA;QACA,KAAAd,IAAA,CAAAJ,OAAA;QACA,KAAAI,IAAA,CAAAC,IAAA,GAAAU,UAAA;MACA;QACA,KAAAI,QAAA,CAAAC,OAAA;MACA;IACA;IACAjB,OAAA;MACA,KAAAO,IAAA;QAAAC,MAAA,OAAApB;MAAA;IACA;IACAmB,KAAAW,KAAA;MACAxC,UAAA,CAAAwC,KAAA,EAAAd,IAAA,CAAAC,GAAA;QACA,KAAAb,aAAA,GAAAa,GAAA,CAAApB,IAAA;MACA;IACA;IACAa,MAAA;MACA,KAAAF,GAAA,CAAAC,OAAA;MACA,KAAAI,IAAA,CAAAJ,OAAA;IACA;IACAlB,IAAA;MACA,IAAAiC,UAAA,QAAAC,KAAA,iBAAAC,SAAA;MACA,IAAAF,UAAA,CAAAG,MAAA;QACA,KAAAI,QAAA,oBAAAf,IAAA;UACA,IAAAgB,GAAA,GAAAR,UAAA,CAAAS,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAhB,EAAA;UACA,IAAAiB,GAAA,GAAAH,GAAA,CAAAI,IAAA;UACA7C,GAAA,CAAA4C,GAAA,EAAAnB,IAAA,CAAAC,GAAA;YACA,KAAAW,QAAA,CAAAS,OAAA,CAAApB,GAAA,CAAAqB,GAAA;YACA,KAAA1B,MAAA;UACA,GAAA2B,KAAA,QACA;QACA;MACA;QACA,KAAAX,QAAA,CAAAC,OAAA;MACA;IACA;IACAW,WAAAC,KAAA,EAAArB,MAAA;MACA,KAAArB,MAAA,GAAA0C,KAAA;MACA,KAAAzC,YAAA,GAAAoB,MAAA;MACA,KAAAD,IAAA;QAAAC,MAAA,EAAAA;MAAA;IACA;EACA;AACA"}]}