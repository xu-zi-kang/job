{"remainingRequest":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\src\\utils\\message.js","dependencies":[{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\src\\utils\\message.js","mtime":1645335817406},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\babel.config.js","mtime":1645335806369},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwpsZXQgbWVzc2FnZUluc3RhbmNlID0gbnVsbDsKY29uc3QgcmVzZXRNZXNzYWdlID0gb3B0aW9ucyA9PiB7CiAgaWYgKG1lc3NhZ2VJbnN0YW5jZSkgewogICAgbWVzc2FnZUluc3RhbmNlLmNsb3NlKCk7CiAgfQogIG1lc3NhZ2VJbnN0YW5jZSA9IE1lc3NhZ2Uob3B0aW9ucyk7Cn07ClsnZXJyb3InLCAnc3VjY2VzcycsICdpbmZvJywgJ3dhcm5pbmcnXS5mb3JFYWNoKHR5cGUgPT4gewogIHJlc2V0TWVzc2FnZVt0eXBlXSA9IG9wdGlvbnMgPT4gewogICAgaWYgKHR5cGVvZiBvcHRpb25zID09ICdzdHJpbmcnKSB7CiAgICAgIG9wdGlvbnMgPSB7CiAgICAgICAgbWVzc2FnZTogb3B0aW9ucwogICAgICB9OwogICAgfQogICAgb3B0aW9ucy50eXBlID0gdHlwZTsKICAgIHJldHVybiByZXNldE1lc3NhZ2Uob3B0aW9ucyk7CiAgfTsKfSk7CmV4cG9ydCBjb25zdCBtZXNzYWdlID0gcmVzZXRNZXNzYWdlOw=="},{"version":3,"names":["Message","messageInstance","resetMessage","options","close","forEach","type","message"],"sources":["C:/Users/yol/Documents/GitHub/job/job-web/src/utils/message.js"],"sourcesContent":["import {Message} from 'element-ui'\r\n\r\nlet messageInstance = null\r\nconst resetMessage = (options) => {\r\n    if (messageInstance) {\r\n        messageInstance.close()\r\n    }\r\n    messageInstance = Message(options)\r\n}\r\n\r\n['error', 'success', 'info', 'warning'].forEach(type => {\r\n    resetMessage[type] = options => {\r\n        if (typeof options == 'string') {\r\n            options = {\r\n                message: options\r\n            }\r\n        }\r\n        options.type = type\r\n        return resetMessage(options)\r\n    }\r\n})\r\n\r\nexport const message = resetMessage"],"mappings":"AAAA,SAAQA,OAAO,QAAO,YAAY;AAElC,IAAIC,eAAe,GAAG,IAAI;AAC1B,MAAMC,YAAY,GAAIC,OAAO,IAAK;EAC9B,IAAIF,eAAe,EAAE;IACjBA,eAAe,CAACG,KAAK,CAAC,CAAC;EAC3B;EACAH,eAAe,GAAGD,OAAO,CAACG,OAAO,CAAC;AACtC,CAAC;AAED,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,CAAC,CAACE,OAAO,CAACC,IAAI,IAAI;EACpDJ,YAAY,CAACI,IAAI,CAAC,GAAGH,OAAO,IAAI;IAC5B,IAAI,OAAOA,OAAO,IAAI,QAAQ,EAAE;MAC5BA,OAAO,GAAG;QACNI,OAAO,EAAEJ;MACb,CAAC;IACL;IACAA,OAAO,CAACG,IAAI,GAAGA,IAAI;IACnB,OAAOJ,YAAY,CAACC,OAAO,CAAC;EAChC,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMI,OAAO,GAAGL,YAAY"}]}