{"remainingRequest":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\src\\views\\company\\CompanyInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\src\\views\\company\\CompanyInfo.vue","mtime":1645335817411},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\babel.config.js","mtime":1645335806369},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCB7IHVwZGF0ZSB9IGZyb20gIkAvYXBpL2NvbXBhbnkiOwppbXBvcnQgUkZvcm0gZnJvbSAiQC9jb21wb25lbnRzL1JGb3JtIjsKaW1wb3J0IHsgY29tcGFueUluZm8gfSBmcm9tICJAL2FwaS9jb21wYW55IjsKaW1wb3J0IHsgZGljdF9xdWVyeSB9IGZyb20gIkAvYXBpL2RpY3QiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkNvbXBhbnlJbmZvIiwKICBjb21wb25lbnRzOiB7CiAgICBSRm9ybQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvcm06IHsKICAgICAgICBpZDogJycsCiAgICAgICAgbmFtZTogJycsCiAgICAgICAgY29udGFjdDogJycsCiAgICAgICAgdGVsZXBob25lOiAnJywKICAgICAgICBlbWFpbDogJycsCiAgICAgICAgYWRkcjogJycsCiAgICAgICAgdXJsOiAnJywKICAgICAgICBzaXplOiAnJywKICAgICAgICB0eXBlOiAnJywKICAgICAgICBsb2dvOiAnJywKICAgICAgICBkZXNjcmlwdGlvbjogJycKICAgICAgfSwKICAgICAgcnVsZXM6IHsKICAgICAgICBuYW1lOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn5b+F5aGr6aG55LiN6IO95Li656m6JwogICAgICAgIH1dCiAgICAgIH0sCiAgICAgIGl0ZW1zOiBbewogICAgICAgIHR5cGU6ICd0ZXh0JywKICAgICAgICBsYWJlbDogJ+WQjeensCcsCiAgICAgICAgcHJvcDogJ25hbWUnLAogICAgICAgIG5hbWU6ICduYW1lJywKICAgICAgICBwbGFjZWhvbGRlcjogJ+ivt+i+k+WFpeWQjeensCcKICAgICAgfSwgewogICAgICAgIHR5cGU6ICd0ZXh0JywKICAgICAgICBsYWJlbDogJ+iBlOezu+S6uicsCiAgICAgICAgcHJvcDogJ2NvbnRhY3QnLAogICAgICAgIG5hbWU6ICdjb250YWN0JywKICAgICAgICBwbGFjZWhvbGRlcjogJ+ivt+mAieaLqeiBlOezu+S6uicsCiAgICAgICAgb3B0aW9uczogW10KICAgICAgfSwgewogICAgICAgIHR5cGU6ICd0ZXh0JywKICAgICAgICBsYWJlbDogJ+iBlOezu+eUteivnScsCiAgICAgICAgcHJvcDogJ3RlbGVwaG9uZScsCiAgICAgICAgbmFtZTogJ3RlbGVwaG9uZScsCiAgICAgICAgcGxhY2Vob2xkZXI6ICfor7fovpPlhaXogZTns7vnlLXor50nCiAgICAgIH0sIHsKICAgICAgICB0eXBlOiAndGV4dCcsCiAgICAgICAgbGFiZWw6ICfpgq7nrrEnLAogICAgICAgIHByb3A6ICdlbWFpbCcsCiAgICAgICAgbmFtZTogJ2VtYWlsJywKICAgICAgICBwbGFjZWhvbGRlcjogJ+ivt+i+k+WFpemCrueusScKICAgICAgfSwgewogICAgICAgIHR5cGU6ICd0ZXh0JywKICAgICAgICBsYWJlbDogJ+WcsOWdgCcsCiAgICAgICAgcHJvcDogJ2FkZHInLAogICAgICAgIG5hbWU6ICdhZGRyJywKICAgICAgICBwbGFjZWhvbGRlcjogJ+ivt+i+k+WFpeWcsOWdgCcKICAgICAgfSwgewogICAgICAgIHR5cGU6ICd0ZXh0JywKICAgICAgICBsYWJlbDogJ+WklumTvicsCiAgICAgICAgcHJvcDogJ3VybCcsCiAgICAgICAgbmFtZTogJ3VybCcsCiAgICAgICAgcGxhY2Vob2xkZXI6ICfor7fovpPlhaXlpJbpk74nCiAgICAgIH0sIHsKICAgICAgICB0eXBlOiAndGV4dCcsCiAgICAgICAgbGFiZWw6ICfnvZHlnYAnLAogICAgICAgIHByb3A6ICd1cmwnLAogICAgICAgIG5hbWU6ICd1cmwnLAogICAgICAgIHBsYWNlaG9sZGVyOiAn6K+36L6T5YWl572R5Z2AJwogICAgICB9LCB7CiAgICAgICAgdHlwZTogJ3NlbGVjdCcsCiAgICAgICAgbGFiZWw6ICfop4TmqKEnLAogICAgICAgIHByb3A6ICdzaXplJywKICAgICAgICBuYW1lOiAnc2l6ZScsCiAgICAgICAgcGxhY2Vob2xkZXI6ICfor7fovpPlhaXop4TmqKEnLAogICAgICAgIG9wdGlvbnM6IFtdCiAgICAgIH0sIHsKICAgICAgICB0eXBlOiAnc2VsZWN0JywKICAgICAgICBsYWJlbDogJ+WFrOWPuOexu+WeiycsCiAgICAgICAgcHJvcDogJ3R5cGUnLAogICAgICAgIG5hbWU6ICd0eXBlJywKICAgICAgICBwbGFjZWhvbGRlcjogJ+ivt+mAieaLqeWFrOWPuOexu+WeiycsCiAgICAgICAgb3B0aW9uczogW10KICAgICAgfSwgewogICAgICAgIHR5cGU6ICdmaWxlJywKICAgICAgICBsYWJlbDogJ0xvZ28nLAogICAgICAgIHByb3A6ICdsb2dvJywKICAgICAgICBuYW1lOiAnbG9nbycsCiAgICAgICAgcGxhY2Vob2xkZXI6ICdMb2dvJwogICAgICB9LCB7CiAgICAgICAgdHlwZTogJ2FyZWEnLAogICAgICAgIGxhYmVsOiAn5YWs5Y+45o+P6L+wJywKICAgICAgICBwcm9wOiAnZGVzY3JpcHRpb24nLAogICAgICAgIG5hbWU6ICdkZXNjcmlwdGlvbicsCiAgICAgICAgcGxhY2Vob2xkZXI6ICfor7flvZXlhaXlhoXlrrknCiAgICAgIH1dCiAgICB9OwogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0SW5mbygpOwogICAgdGhpcy5nZXREaWN0TGlzdDEoNCk7CiAgICB0aGlzLmdldERpY3RMaXN0Mig1KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERpY3RMaXN0MSh0eXBlSWQpIHsKICAgICAgZGljdF9xdWVyeSh7CiAgICAgICAgdHlwZUlkOiB0eXBlSWQKICAgICAgfSkudGhlbihyZXMgPT4gewogICAgICAgIGxldCBhcnIgPSBbXTsKICAgICAgICByZXMuZGF0YS5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgbGV0IHAgPSB7CiAgICAgICAgICAgIHZhbHVlOiBpdGVtLmRpY3RLZXksCiAgICAgICAgICAgIGxhYmVsOiBpdGVtLmRpY3RWYWwKICAgICAgICAgIH07CiAgICAgICAgICBhcnIucHVzaChwKTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLml0ZW1zLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICBpZiAoaXRlbS50eXBlID09ICdzZWxlY3QnICYmIGl0ZW0ubmFtZSA9PSAndHlwZScpIHsKICAgICAgICAgICAgaXRlbS5vcHRpb25zID0gYXJyOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBnZXREaWN0TGlzdDIodHlwZUlkKSB7CiAgICAgIGRpY3RfcXVlcnkoewogICAgICAgIHR5cGVJZDogdHlwZUlkCiAgICAgIH0pLnRoZW4ocmVzID0+IHsKICAgICAgICBsZXQgYXJyID0gW107CiAgICAgICAgcmVzLmRhdGEuZm9yRWFjaChpdGVtID0+IHsKICAgICAgICAgIGxldCBwID0gewogICAgICAgICAgICB2YWx1ZTogaXRlbS5kaWN0S2V5LAogICAgICAgICAgICBsYWJlbDogaXRlbS5kaWN0VmFsCiAgICAgICAgICB9OwogICAgICAgICAgYXJyLnB1c2gocCk7CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgaWYgKGl0ZW0udHlwZSA9PSAnc2VsZWN0JyAmJiBpdGVtLm5hbWUgPT0gJ3NpemUnKSB7CiAgICAgICAgICAgIGl0ZW0ub3B0aW9ucyA9IGFycjsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0SW5mbygpIHsKICAgICAgY29tcGFueUluZm8oKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy5mb3JtID0gcmVzLmRhdGE7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5mb3JtKTsKICAgICAgfSk7CiAgICB9LAogICAgc2F2ZSgpIHsKICAgICAgbGV0IGZsYWcgPSB0aGlzLiRyZWZzWydteUZvcm0nXS52YWxpZGF0ZUZvcm0oKTsKICAgICAgaWYgKGZsYWcpIHsKICAgICAgICBsZXQgcGFyYW0gPSB0aGlzLmZvcm07CiAgICAgICAgaWYgKHRoaXMuZm9ybS5zaW5nbGUpIHsKICAgICAgICAgIHBhcmFtLnNpbmdsZSA9ICdZJzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcGFyYW0uc2luZ2xlID0gJ04nOwogICAgICAgIH0KICAgICAgICB1cGRhdGUocGFyYW0pLnRoZW4ocmVzID0+IHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgIHRoaXMucGFyYW0uY2xvc2UoKTsKICAgICAgICAgIHRoaXMucGFyYW0uY2FsbGJhY2soKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"names":["update","RForm","companyInfo","dict_query","name","components","data","form","id","contact","telephone","email","addr","url","size","type","logo","description","rules","required","message","items","label","prop","placeholder","options","mounted","getInfo","getDictList1","getDictList2","methods","typeId","then","res","arr","forEach","item","p","value","dictKey","dictVal","push","console","log","save","flag","$refs","validateForm","param","single","$message","success","msg","close","callback"],"sources":["src/views/company/CompanyInfo.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <r-form ref=\"myForm\" :rules=\"rules\" :form=\"form\" :items=\"items\" :save=\"save\"></r-form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {update} from \"@/api/company\";\r\n    import RForm from \"@/components/RForm\";\r\n    import {companyInfo} from \"@/api/company\";\r\n    import {dict_query} from \"@/api/dict\";\r\n\r\n    export default {\r\n        name: \"CompanyInfo\",\r\n        components: {RForm},\r\n        data() {\r\n            return {\r\n                form: {\r\n                    id: '',\r\n                    name: '',\r\n                    contact: '',\r\n                    telephone: '',\r\n                    email: '',\r\n                    addr: '',\r\n                    url: '',\r\n                    size: '',\r\n                    type: '',\r\n                    logo: '',\r\n                    description: '',\r\n                },\r\n                rules: {\r\n                    name: [{required: true, message: '必填项不能为空'}]\r\n                },\r\n                items: [\r\n                    {type: 'text', label: '名称', prop: 'name', name: 'name', placeholder: '请输入名称'},\r\n                    {type: 'text', label: '联系人', prop: 'contact', name: 'contact', placeholder: '请选择联系人', options: []},\r\n                    {type: 'text', label: '联系电话', prop: 'telephone', name: 'telephone', placeholder: '请输入联系电话'},\r\n                    {type: 'text', label: '邮箱', prop: 'email', name: 'email', placeholder: '请输入邮箱'},\r\n                    {type: 'text', label: '地址', prop: 'addr', name: 'addr', placeholder: '请输入地址'},\r\n                    {type: 'text', label: '外链', prop: 'url', name: 'url', placeholder: '请输入外链'},\r\n                    {type: 'text', label: '网址', prop: 'url', name: 'url', placeholder: '请输入网址'},\r\n                    {type: 'select', label: '规模', prop: 'size', name: 'size', placeholder: '请输入规模', options: []},\r\n                    {type: 'select', label: '公司类型', prop: 'type', name: 'type', placeholder: '请选择公司类型', options: []},\r\n                    {type: 'file', label: 'Logo', prop: 'logo', name: 'logo', placeholder: 'Logo'},\r\n                    {type: 'area', label: '公司描述', prop: 'description', name: 'description', placeholder: '请录入内容'},\r\n                ]\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getInfo();\r\n            this.getDictList1(4);\r\n            this.getDictList2(5);\r\n        },\r\n        methods: {\r\n            getDictList1(typeId) {\r\n                dict_query({typeId: typeId}).then(res => {\r\n                    let arr = [];\r\n                    res.data.forEach(item => {\r\n                        let p = {value: item.dictKey, label: item.dictVal};\r\n                        arr.push(p);\r\n                    });\r\n                    this.items.forEach(item => {\r\n                        if (item.type == 'select' && item.name == 'type') {\r\n                            item.options = arr;\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            getDictList2(typeId) {\r\n                dict_query({typeId: typeId}).then(res => {\r\n                    let arr = [];\r\n                    res.data.forEach(item => {\r\n                        let p = {value: item.dictKey, label: item.dictVal};\r\n                        arr.push(p);\r\n                    });\r\n                    this.items.forEach(item => {\r\n                        if (item.type == 'select' && item.name == 'size') {\r\n                            item.options = arr;\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            getInfo() {\r\n                companyInfo().then(res => {\r\n                    this.form = res.data;\r\n                    console.log(this.form)\r\n                })\r\n            },\r\n            save() {\r\n                let flag = this.$refs['myForm'].validateForm();\r\n                if (flag) {\r\n                    let param = this.form;\r\n                    if (this.form.single) {\r\n                        param.single = 'Y';\r\n                    } else {\r\n                        param.single = 'N';\r\n                    }\r\n                    update(param).then(res => {\r\n                        this.$message.success(res.msg);\r\n                        this.param.close();\r\n                        this.param.callback();\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"}]}