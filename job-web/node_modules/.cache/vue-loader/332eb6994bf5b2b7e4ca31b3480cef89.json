{"remainingRequest":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\src\\views\\post\\Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\src\\views\\post\\Edit.vue","mtime":1645335817415},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgaW1wb3J0IHt1cGRhdGV9IGZyb20gIkAvYXBpL3Bvc3QiOw0KICAgIGltcG9ydCBSRm9ybSBmcm9tICJAL2NvbXBvbmVudHMvUkZvcm0iOw0KICAgIGltcG9ydCB7ZGljdF9xdWVyeX0gZnJvbSAiQC9hcGkvZGljdCI7DQoNCiAgICBleHBvcnQgZGVmYXVsdCB7DQogICAgICAgIG5hbWU6ICJBZGQiLA0KICAgICAgICBjb21wb25lbnRzOiB7UkZvcm19LA0KICAgICAgICBwcm9wczogew0KICAgICAgICAgICAgcGFyYW06IHsNCiAgICAgICAgICAgICAgICB0eXBlOiBPYmplY3QsDQogICAgICAgICAgICAgICAgZGVmYXVsdDogKCkgPT4gew0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZGF0YSgpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgZm9ybTogew0KICAgICAgICAgICAgICAgICAgICBpZDogJycsDQogICAgICAgICAgICAgICAgICAgIG5hbWU6ICcnLA0KICAgICAgICAgICAgICAgICAgICBlZHVjYXRpb246ICcnLA0KICAgICAgICAgICAgICAgICAgICBzYWxhcnk6ICcnLA0KICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJycsDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBydWxlczogew0KICAgICAgICAgICAgICAgICAgICBuYW1lOiBbe3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5b+F5aGr6aG55LiN6IO95Li656m6J31dLA0KICAgICAgICAgICAgICAgICAgICBlZHVjYXRpb246IFt7cmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICflv4XloavpobnkuI3og73kuLrnqbonfV0sDQogICAgICAgICAgICAgICAgICAgIHNhbGFyeTogW3tyZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+W/heWhq+mhueS4jeiDveS4uuepuid9XSwNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIGl0ZW1zOiBbDQogICAgICAgICAgICAgICAgICAgIHt0eXBlOiAndGV4dCcsIGxhYmVsOiAn6IGM5L2N5ZCN56ewJywgcHJvcDogJ25hbWUnLCBuYW1lOiAnbmFtZScsIHBsYWNlaG9sZGVyOiAn6IGM5L2N5ZCN56ewJ30sDQogICAgICAgICAgICAgICAgICAgIHt0eXBlOiAndGV4dCcsIGxhYmVsOiAn5a2m5Y6G6KaB5rGCJywgcHJvcDogJ2VkdWNhdGlvbicsIG5hbWU6ICdlZHVjYXRpb24nLCBwbGFjZWhvbGRlcjogJ+WtpuWOhuimgeaxgid9LA0KICAgICAgICAgICAgICAgICAgICB7dHlwZTogJ3RleHQnLCBsYWJlbDogJ+iBjOS9jeiWquawtCcsIHByb3A6ICdzYWxhcnknLCBuYW1lOiAnc2FsYXJ5JywgcGxhY2Vob2xkZXI6ICfogYzkvY3olqrmsLQnfSwNCiAgICAgICAgICAgICAgICAgICAge3R5cGU6ICdhcmVhJywgbGFiZWw6ICfogYzkvY3mj4/ov7AnLCBwcm9wOiAnZGVzY3JpcHRpb24nLCBuYW1lOiAnZGVzY3JpcHRpb24nLCBwbGFjZWhvbGRlcjogJ+iBjOS9jeaPj+i/sCd9LA0KICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgbW91bnRlZCgpIHsNCiAgICAgICAgICAgIHRoaXMuZm9ybSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5wYXJhbS5mb3JtKSk7DQogICAgICAgICAgICB0aGlzLmdldERpY3RMaXN0MSgyKTsNCiAgICAgICAgICAgIHRoaXMuZ2V0RGljdExpc3QyKDMpOw0KICAgICAgICB9LA0KICAgICAgICBtZXRob2RzOiB7DQogICAgICAgICAgICBnZXREaWN0TGlzdDEodHlwZUlkKSB7DQogICAgICAgICAgICAgICAgZGljdF9xdWVyeSh7dHlwZUlkOiB0eXBlSWR9KS50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICAgICAgICAgIGxldCBhcnIgPSBbXTsNCiAgICAgICAgICAgICAgICAgICAgcmVzLmRhdGEuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBwID0ge3ZhbHVlOiBpdGVtLmRpY3RLZXksIGxhYmVsOiBpdGVtLmRpY3RWYWx9Ow0KICAgICAgICAgICAgICAgICAgICAgICAgYXJyLnB1c2gocCk7DQogICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1zLmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS50eXBlID09ICdzZWxlY3QnICYmIGl0ZW0ubmFtZSA9PSAnZWR1Y2F0aW9uJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ub3B0aW9ucyA9IGFycjsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGdldERpY3RMaXN0Mih0eXBlSWQpIHsNCiAgICAgICAgICAgICAgICBkaWN0X3F1ZXJ5KHt0eXBlSWQ6IHR5cGVJZH0pLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICAgICAgbGV0IGFyciA9IFtdOw0KICAgICAgICAgICAgICAgICAgICByZXMuZGF0YS5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHAgPSB7dmFsdWU6IGl0ZW0uZGljdEtleSwgbGFiZWw6IGl0ZW0uZGljdFZhbH07DQogICAgICAgICAgICAgICAgICAgICAgICBhcnIucHVzaChwKTsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnR5cGUgPT0gJ3NlbGVjdCcgJiYgaXRlbS5uYW1lID09ICdzYWxhcnknKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5vcHRpb25zID0gYXJyOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgc2F2ZSgpIHsNCiAgICAgICAgICAgICAgICBsZXQgZmxhZyA9IHRoaXMuJHJlZnNbJ215Rm9ybSddLnZhbGlkYXRlRm9ybSgpOw0KICAgICAgICAgICAgICAgIGlmIChmbGFnKSB7DQogICAgICAgICAgICAgICAgICAgIHVwZGF0ZSh0aGlzLmZvcm0pLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFyYW0uY2xvc2UoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFyYW0uY2FsbGJhY2soKTsNCiAgICAgICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQo="},{"version":3,"sources":["Edit.vue"],"names":[],"mappings":";AAQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Edit.vue","sourceRoot":"src/views/post","sourcesContent":["<template>\r\n    <el-dialog title=\"修改\" :fullscreen=\"true\" :visible.sync=\"param.visible\" @close=\"param.close\"\r\n               :close-on-click-modal=\"false\">\r\n        <r-form ref=\"myForm\" :rules=\"rules\" :form=\"form\" :items=\"items\" :save=\"save\"></r-form>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\n    import {update} from \"@/api/post\";\r\n    import RForm from \"@/components/RForm\";\r\n    import {dict_query} from \"@/api/dict\";\r\n\r\n    export default {\r\n        name: \"Add\",\r\n        components: {RForm},\r\n        props: {\r\n            param: {\r\n                type: Object,\r\n                default: () => {\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                form: {\r\n                    id: '',\r\n                    name: '',\r\n                    education: '',\r\n                    salary: '',\r\n                    description: '',\r\n                },\r\n                rules: {\r\n                    name: [{required: true, message: '必填项不能为空'}],\r\n                    education: [{required: true, message: '必填项不能为空'}],\r\n                    salary: [{required: true, message: '必填项不能为空'}],\r\n                },\r\n                items: [\r\n                    {type: 'text', label: '职位名称', prop: 'name', name: 'name', placeholder: '职位名称'},\r\n                    {type: 'text', label: '学历要求', prop: 'education', name: 'education', placeholder: '学历要求'},\r\n                    {type: 'text', label: '职位薪水', prop: 'salary', name: 'salary', placeholder: '职位薪水'},\r\n                    {type: 'area', label: '职位描述', prop: 'description', name: 'description', placeholder: '职位描述'},\r\n                ]\r\n            }\r\n        },\r\n        mounted() {\r\n            this.form = JSON.parse(JSON.stringify(this.param.form));\r\n            this.getDictList1(2);\r\n            this.getDictList2(3);\r\n        },\r\n        methods: {\r\n            getDictList1(typeId) {\r\n                dict_query({typeId: typeId}).then(res => {\r\n                    let arr = [];\r\n                    res.data.forEach(item => {\r\n                        let p = {value: item.dictKey, label: item.dictVal};\r\n                        arr.push(p);\r\n                    });\r\n                    this.items.forEach(item => {\r\n                        if (item.type == 'select' && item.name == 'education') {\r\n                            item.options = arr;\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            getDictList2(typeId) {\r\n                dict_query({typeId: typeId}).then(res => {\r\n                    let arr = [];\r\n                    res.data.forEach(item => {\r\n                        let p = {value: item.dictKey, label: item.dictVal};\r\n                        arr.push(p);\r\n                    });\r\n                    this.items.forEach(item => {\r\n                        if (item.type == 'select' && item.name == 'salary') {\r\n                            item.options = arr;\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            save() {\r\n                let flag = this.$refs['myForm'].validateForm();\r\n                if (flag) {\r\n                    update(this.form).then(res => {\r\n                        this.$message.success(res.msg);\r\n                        this.param.close();\r\n                        this.param.callback();\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}