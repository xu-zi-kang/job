{"remainingRequest":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\src\\views\\intention\\Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\src\\views\\intention\\Add.vue","mtime":1645335817414},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgaW1wb3J0IHtjcmVhdGV9IGZyb20gIkAvYXBpL2ludGVudGlvbiI7DQogICAgaW1wb3J0IHtxdWVyeX0gZnJvbSAiQC9hcGkvcmVzdW1lIjsNCiAgICBpbXBvcnQgUkZvcm0gZnJvbSAiQC9jb21wb25lbnRzL1JGb3JtIjsNCiAgICBpbXBvcnQge2RpY3RfcXVlcnl9IGZyb20gIkAvYXBpL2RpY3QiOw0KDQogICAgZXhwb3J0IGRlZmF1bHQgew0KICAgICAgICBuYW1lOiAiQWRkIiwNCiAgICAgICAgY29tcG9uZW50czoge1JGb3JtfSwNCiAgICAgICAgcHJvcHM6IHsNCiAgICAgICAgICAgIHBhcmFtOiB7DQogICAgICAgICAgICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgICAgICAgICAgIGRlZmF1bHQ6ICgpID0+IHsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGRhdGEoKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIGZvcm06IHsNCiAgICAgICAgICAgICAgICAgICAgcmVzdW1lSWQ6ICcnLA0KICAgICAgICAgICAgICAgICAgICBuYW1lOiAnJywNCiAgICAgICAgICAgICAgICAgICAgc2FsYXJ5OiAnJywNCiAgICAgICAgICAgICAgICAgICAgY2l0eTogJycsDQogICAgICAgICAgICAgICAgICAgIHR5cGU6ICcnLA0KICAgICAgICAgICAgICAgICAgICBpbmR1c3RyeTogJycsDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBydWxlczogew0KICAgICAgICAgICAgICAgICAgICByZXN1bWVJZDogW3tyZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+W/heWhq+mhueS4jeiDveS4uuepuid9XSwNCiAgICAgICAgICAgICAgICAgICAgbmFtZTogW3tyZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+W/heWhq+mhueS4jeiDveS4uuepuid9XSwNCiAgICAgICAgICAgICAgICAgICAgc2FsYXJ5OiBbe3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5b+F5aGr6aG55LiN6IO95Li656m6J31dLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgaXRlbXM6IFsNCiAgICAgICAgICAgICAgICAgICAge3R5cGU6ICdzZWxlY3QnLCBsYWJlbDogJ+eugOWOhicsIHByb3A6ICdyZXN1bWVJZCcsIG5hbWU6ICdyZXN1bWVJZCcsIHBsYWNlaG9sZGVyOiAn566A5Y6GJywgb3B0aW9uczogW119LA0KICAgICAgICAgICAgICAgICAgICB7dHlwZTogJ3RleHQnLCBsYWJlbDogJ+iBjOS9jeWQjeensCcsIHByb3A6ICduYW1lJywgbmFtZTogJ25hbWUnLCBwbGFjZWhvbGRlcjogJ+iBjOS9jeWQjeensCd9LA0KICAgICAgICAgICAgICAgICAgICB7dHlwZTogJ3NlbGVjdCcsIGxhYmVsOiAn6Jaq6LWEJywgcHJvcDogJ3NhbGFyeScsIG5hbWU6ICdzYWxhcnknLCBwbGFjZWhvbGRlcjogJ+iWqui1hCd9LA0KICAgICAgICAgICAgICAgICAgICB7dHlwZTogJ3RleHQnLCBsYWJlbDogJ+W3peS9nOWfjuW4gicsIHByb3A6ICdjaXR5JywgbmFtZTogJ2NpdHknLCBwbGFjZWhvbGRlcjogJ+WfjuW4gid9LA0KICAgICAgICAgICAgICAgICAgICB7dHlwZTogJ3NlbGVjdCcsIGxhYmVsOiAn5bel5L2c5oCn6LSoJywgcHJvcDogJ3R5cGUnLCBuYW1lOiAndHlwZScsIHBsYWNlaG9sZGVyOiAn5bel5L2c5oCn6LSoJ30sDQogICAgICAgICAgICAgICAgICAgIHt0eXBlOiAndGV4dCcsIGxhYmVsOiAn5pyf5pyb6KGM5LiaJywgcHJvcDogJ2luZHVzdHJ5JywgbmFtZTogJ2luZHVzdHJ5JywgcGxhY2Vob2xkZXI6ICfmnJ/mnJvooYzkuJonfSwNCiAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIG1vdW50ZWQoKSB7DQogICAgICAgICAgICB0aGlzLmdldERpY3RMaXN0MSgzKTsNCiAgICAgICAgICAgIHRoaXMuZ2V0RGljdExpc3QyKDYpOw0KDQogICAgICAgICAgICBxdWVyeSh7fSkudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgIGxldCBhcnIgPSBbXTsNCiAgICAgICAgICAgICAgICByZXMuZGF0YS5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgICAgICAgICAgICBsZXQgcGFyYW0gPSB7dmFsdWU6IGl0ZW0uaWQsIGxhYmVsOiBpdGVtLm5hbWV9DQogICAgICAgICAgICAgICAgICAgIGFyci5wdXNoKHBhcmFtKQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgdGhpcy5pdGVtc1swXS5vcHRpb25zID0gYXJyOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0sDQogICAgICAgIG1ldGhvZHM6IHsNCiAgICAgICAgICAgIGdldERpY3RMaXN0MSh0eXBlSWQpIHsNCiAgICAgICAgICAgICAgICBkaWN0X3F1ZXJ5KHt0eXBlSWQ6IHR5cGVJZH0pLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICAgICAgbGV0IGFyciA9IFtdOw0KICAgICAgICAgICAgICAgICAgICByZXMuZGF0YS5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHAgPSB7dmFsdWU6IGl0ZW0uZGljdEtleSwgbGFiZWw6IGl0ZW0uZGljdFZhbH07DQogICAgICAgICAgICAgICAgICAgICAgICBhcnIucHVzaChwKTsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnR5cGUgPT0gJ3NlbGVjdCcgJiYgaXRlbS5uYW1lID09ICdzYWxhcnknKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5vcHRpb25zID0gYXJyOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZ2V0RGljdExpc3QyKHR5cGVJZCkgew0KICAgICAgICAgICAgICAgIGRpY3RfcXVlcnkoe3R5cGVJZDogdHlwZUlkfSkudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgICAgICBsZXQgYXJyID0gW107DQogICAgICAgICAgICAgICAgICAgIHJlcy5kYXRhLmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBsZXQgcCA9IHt2YWx1ZTogaXRlbS5kaWN0S2V5LCBsYWJlbDogaXRlbS5kaWN0VmFsfTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGFyci5wdXNoKHApOw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0udHlwZSA9PSAnc2VsZWN0JyAmJiBpdGVtLm5hbWUgPT0gJ3R5cGUnKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5vcHRpb25zID0gYXJyOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgc2F2ZSgpIHsNCiAgICAgICAgICAgICAgICBsZXQgZmxhZyA9IHRoaXMuJHJlZnNbJ215Rm9ybSddLnZhbGlkYXRlRm9ybSgpOw0KICAgICAgICAgICAgICAgIGlmIChmbGFnKSB7DQogICAgICAgICAgICAgICAgICAgIGNyZWF0ZSh0aGlzLmZvcm0pLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFyYW0uY2xvc2UoKTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGFyYW0uY2FsbGJhY2soKTsNCiAgICAgICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQo="},{"version":3,"sources":["Add.vue"],"names":[],"mappings":";AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Add.vue","sourceRoot":"src/views/intention","sourcesContent":["<template>\r\n    <el-dialog title=\"新增\" :visible.sync=\"param.visible\" @close=\"param.close\" :close-on-click-modal=\"false\">\r\n        <r-form ref=\"myForm\" :rules=\"rules\" :form=\"form\" :items=\"items\" :save=\"save\"></r-form>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\n    import {create} from \"@/api/intention\";\r\n    import {query} from \"@/api/resume\";\r\n    import RForm from \"@/components/RForm\";\r\n    import {dict_query} from \"@/api/dict\";\r\n\r\n    export default {\r\n        name: \"Add\",\r\n        components: {RForm},\r\n        props: {\r\n            param: {\r\n                type: Object,\r\n                default: () => {\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                form: {\r\n                    resumeId: '',\r\n                    name: '',\r\n                    salary: '',\r\n                    city: '',\r\n                    type: '',\r\n                    industry: '',\r\n                },\r\n                rules: {\r\n                    resumeId: [{required: true, message: '必填项不能为空'}],\r\n                    name: [{required: true, message: '必填项不能为空'}],\r\n                    salary: [{required: true, message: '必填项不能为空'}],\r\n                },\r\n                items: [\r\n                    {type: 'select', label: '简历', prop: 'resumeId', name: 'resumeId', placeholder: '简历', options: []},\r\n                    {type: 'text', label: '职位名称', prop: 'name', name: 'name', placeholder: '职位名称'},\r\n                    {type: 'select', label: '薪资', prop: 'salary', name: 'salary', placeholder: '薪资'},\r\n                    {type: 'text', label: '工作城市', prop: 'city', name: 'city', placeholder: '城市'},\r\n                    {type: 'select', label: '工作性质', prop: 'type', name: 'type', placeholder: '工作性质'},\r\n                    {type: 'text', label: '期望行业', prop: 'industry', name: 'industry', placeholder: '期望行业'},\r\n                ]\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getDictList1(3);\r\n            this.getDictList2(6);\r\n\r\n            query({}).then(res => {\r\n                let arr = [];\r\n                res.data.forEach(item => {\r\n                    let param = {value: item.id, label: item.name}\r\n                    arr.push(param)\r\n                })\r\n                this.items[0].options = arr;\r\n            });\r\n        },\r\n        methods: {\r\n            getDictList1(typeId) {\r\n                dict_query({typeId: typeId}).then(res => {\r\n                    let arr = [];\r\n                    res.data.forEach(item => {\r\n                        let p = {value: item.dictKey, label: item.dictVal};\r\n                        arr.push(p);\r\n                    });\r\n                    this.items.forEach(item => {\r\n                        if (item.type == 'select' && item.name == 'salary') {\r\n                            item.options = arr;\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            getDictList2(typeId) {\r\n                dict_query({typeId: typeId}).then(res => {\r\n                    let arr = [];\r\n                    res.data.forEach(item => {\r\n                        let p = {value: item.dictKey, label: item.dictVal};\r\n                        arr.push(p);\r\n                    });\r\n                    this.items.forEach(item => {\r\n                        if (item.type == 'select' && item.name == 'type') {\r\n                            item.options = arr;\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            save() {\r\n                let flag = this.$refs['myForm'].validateForm();\r\n                if (flag) {\r\n                    create(this.form).then(res => {\r\n                        this.$message.success(res.msg);\r\n                        this.param.close();\r\n                        this.param.callback();\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}