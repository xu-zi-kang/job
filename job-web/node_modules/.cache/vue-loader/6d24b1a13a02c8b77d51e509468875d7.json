{"remainingRequest":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\src\\views\\post\\Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\src\\views\\post\\Add.vue","mtime":1645335817415},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yol\\Documents\\GitHub\\job\\job-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgaW1wb3J0IHtjcmVhdGV9IGZyb20gIkAvYXBpL3Bvc3QiOw0KICAgIGltcG9ydCBSRm9ybSBmcm9tICJAL2NvbXBvbmVudHMvUkZvcm0iOw0KICAgIGltcG9ydCB7ZGljdF9xdWVyeX0gZnJvbSAiQC9hcGkvZGljdCI7DQoNCiAgICBleHBvcnQgZGVmYXVsdCB7DQogICAgICAgIG5hbWU6ICJBZGQiLA0KICAgICAgICBjb21wb25lbnRzOiB7UkZvcm19LA0KICAgICAgICBwcm9wczogew0KICAgICAgICAgICAgcGFyYW06IHsNCiAgICAgICAgICAgICAgICB0eXBlOiBPYmplY3QsDQogICAgICAgICAgICAgICAgZGVmYXVsdDogKCkgPT4gew0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgZGF0YSgpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgZm9ybTogew0KICAgICAgICAgICAgICAgICAgICBuYW1lOiAnJywNCiAgICAgICAgICAgICAgICAgICAgZWR1Y2F0aW9uOiAnJywNCiAgICAgICAgICAgICAgICAgICAgc2FsYXJ5OiAnJywNCiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICcnLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgcnVsZXM6IHsNCiAgICAgICAgICAgICAgICAgICAgbmFtZTogW3tyZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+W/heWhq+mhueS4jeiDveS4uuepuid9XSwNCiAgICAgICAgICAgICAgICAgICAgZWR1Y2F0aW9uOiBbe3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5b+F5aGr6aG55LiN6IO95Li656m6J31dLA0KICAgICAgICAgICAgICAgICAgICBzYWxhcnk6IFt7cmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICflv4XloavpobnkuI3og73kuLrnqbonfV0sDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBpdGVtczogWw0KICAgICAgICAgICAgICAgICAgICB7dHlwZTogJ3RleHQnLCBsYWJlbDogJ+iBjOS9jeWQjeensCcsIHByb3A6ICduYW1lJywgbmFtZTogJ25hbWUnLCBwbGFjZWhvbGRlcjogJ+iBjOS9jeWQjeensCd9LA0KICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc2VsZWN0JywNCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAn5a2m5Y6G6KaB5rGCJywNCiAgICAgICAgICAgICAgICAgICAgICAgIHByb3A6ICdlZHVjYXRpb24nLA0KICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2VkdWNhdGlvbicsDQogICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogJ+WtpuWOhuimgeaxgicsDQogICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zOiBbXQ0KICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICB7dHlwZTogJ3NlbGVjdCcsIGxhYmVsOiAn6IGM5L2N6Jaq5rC0JywgcHJvcDogJ3NhbGFyeScsIG5hbWU6ICdzYWxhcnknLCBwbGFjZWhvbGRlcjogJ+iBjOS9jeiWquawtCcsIG9wdGlvbnM6IFtdfSwNCiAgICAgICAgICAgICAgICAgICAge3R5cGU6ICdhcmVhJywgbGFiZWw6ICfogYzkvY3mj4/ov7AnLCBwcm9wOiAnZGVzY3JpcHRpb24nLCBuYW1lOiAnZGVzY3JpcHRpb24nLCBwbGFjZWhvbGRlcjogJ+iBjOS9jeaPj+i/sCd9LA0KICAgICAgICAgICAgICAgIF0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgbW91bnRlZCgpIHsNCiAgICAgICAgICAgIHRoaXMuZ2V0RGljdExpc3QxKDIpOw0KICAgICAgICAgICAgdGhpcy5nZXREaWN0TGlzdDIoMyk7DQogICAgICAgIH0sDQogICAgICAgIG1ldGhvZHM6IHsNCiAgICAgICAgICAgIGdldERpY3RMaXN0MSh0eXBlSWQpIHsNCiAgICAgICAgICAgICAgICBkaWN0X3F1ZXJ5KHt0eXBlSWQ6IHR5cGVJZH0pLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICAgICAgbGV0IGFyciA9IFtdOw0KICAgICAgICAgICAgICAgICAgICByZXMuZGF0YS5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHAgPSB7dmFsdWU6IGl0ZW0uZGljdEtleSwgbGFiZWw6IGl0ZW0uZGljdFZhbH07DQogICAgICAgICAgICAgICAgICAgICAgICBhcnIucHVzaChwKTsNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnR5cGUgPT0gJ3NlbGVjdCcgJiYgaXRlbS5uYW1lID09ICdlZHVjYXRpb24nKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5vcHRpb25zID0gYXJyOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZ2V0RGljdExpc3QyKHR5cGVJZCkgew0KICAgICAgICAgICAgICAgIGRpY3RfcXVlcnkoe3R5cGVJZDogdHlwZUlkfSkudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgICAgICBsZXQgYXJyID0gW107DQogICAgICAgICAgICAgICAgICAgIHJlcy5kYXRhLmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBsZXQgcCA9IHt2YWx1ZTogaXRlbS5kaWN0S2V5LCBsYWJlbDogaXRlbS5kaWN0VmFsfTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGFyci5wdXNoKHApOw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0udHlwZSA9PSAnc2VsZWN0JyAmJiBpdGVtLm5hbWUgPT0gJ3NhbGFyeScpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLm9wdGlvbnMgPSBhcnI7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBzYXZlKCkgew0KICAgICAgICAgICAgICAgIGxldCBmbGFnID0gdGhpcy4kcmVmc1snbXlGb3JtJ10udmFsaWRhdGVGb3JtKCk7DQogICAgICAgICAgICAgICAgaWYgKGZsYWcpIHsNCiAgICAgICAgICAgICAgICAgICAgY3JlYXRlKHRoaXMuZm9ybSkudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbS5jbG9zZSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbS5jYWxsYmFjaygpOw0KICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg=="},{"version":3,"sources":["Add.vue"],"names":[],"mappings":";AAQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Add.vue","sourceRoot":"src/views/post","sourcesContent":["<template>\r\n    <el-dialog title=\"新增\" :fullscreen=\"true\" :visible.sync=\"param.visible\" @close=\"param.close\"\r\n               :close-on-click-modal=\"false\">\r\n        <r-form ref=\"myForm\" :rules=\"rules\" :form=\"form\" :items=\"items\" :save=\"save\"></r-form>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\n    import {create} from \"@/api/post\";\r\n    import RForm from \"@/components/RForm\";\r\n    import {dict_query} from \"@/api/dict\";\r\n\r\n    export default {\r\n        name: \"Add\",\r\n        components: {RForm},\r\n        props: {\r\n            param: {\r\n                type: Object,\r\n                default: () => {\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                form: {\r\n                    name: '',\r\n                    education: '',\r\n                    salary: '',\r\n                    description: '',\r\n                },\r\n                rules: {\r\n                    name: [{required: true, message: '必填项不能为空'}],\r\n                    education: [{required: true, message: '必填项不能为空'}],\r\n                    salary: [{required: true, message: '必填项不能为空'}],\r\n                },\r\n                items: [\r\n                    {type: 'text', label: '职位名称', prop: 'name', name: 'name', placeholder: '职位名称'},\r\n                    {\r\n                        type: 'select',\r\n                        label: '学历要求',\r\n                        prop: 'education',\r\n                        name: 'education',\r\n                        placeholder: '学历要求',\r\n                        options: []\r\n                    },\r\n                    {type: 'select', label: '职位薪水', prop: 'salary', name: 'salary', placeholder: '职位薪水', options: []},\r\n                    {type: 'area', label: '职位描述', prop: 'description', name: 'description', placeholder: '职位描述'},\r\n                ]\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getDictList1(2);\r\n            this.getDictList2(3);\r\n        },\r\n        methods: {\r\n            getDictList1(typeId) {\r\n                dict_query({typeId: typeId}).then(res => {\r\n                    let arr = [];\r\n                    res.data.forEach(item => {\r\n                        let p = {value: item.dictKey, label: item.dictVal};\r\n                        arr.push(p);\r\n                    });\r\n                    this.items.forEach(item => {\r\n                        if (item.type == 'select' && item.name == 'education') {\r\n                            item.options = arr;\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            getDictList2(typeId) {\r\n                dict_query({typeId: typeId}).then(res => {\r\n                    let arr = [];\r\n                    res.data.forEach(item => {\r\n                        let p = {value: item.dictKey, label: item.dictVal};\r\n                        arr.push(p);\r\n                    });\r\n                    this.items.forEach(item => {\r\n                        if (item.type == 'select' && item.name == 'salary') {\r\n                            item.options = arr;\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            save() {\r\n                let flag = this.$refs['myForm'].validateForm();\r\n                if (flag) {\r\n                    create(this.form).then(res => {\r\n                        this.$message.success(res.msg);\r\n                        this.param.close();\r\n                        this.param.callback();\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}