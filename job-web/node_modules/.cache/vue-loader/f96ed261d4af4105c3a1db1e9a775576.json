{"remainingRequest":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\src\\views\\experience\\Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\src\\views\\experience\\Add.vue","mtime":1645335817412},{"path":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\学生就业系统\\基于springboot的学生就业信息管理系统\\project\\job-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgaW1wb3J0IHtjcmVhdGV9IGZyb20gIkAvYXBpL2V4cGVyaWVuY2UiOw0KICAgIGltcG9ydCB7cXVlcnl9IGZyb20gIkAvYXBpL3Jlc3VtZSI7DQogICAgaW1wb3J0IFJGb3JtIGZyb20gIkAvY29tcG9uZW50cy9SRm9ybSI7DQogICAgaW1wb3J0IHtkaWN0X3F1ZXJ5fSBmcm9tICJAL2FwaS9kaWN0IjsNCg0KICAgIGV4cG9ydCBkZWZhdWx0IHsNCiAgICAgICAgbmFtZTogIkFkZCIsDQogICAgICAgIGNvbXBvbmVudHM6IHtSRm9ybX0sDQogICAgICAgIHByb3BzOiB7DQogICAgICAgICAgICBwYXJhbTogew0KICAgICAgICAgICAgICAgIHR5cGU6IE9iamVjdCwNCiAgICAgICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiB7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBkYXRhKCkgew0KICAgICAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgICAgICBmb3JtOiB7DQogICAgICAgICAgICAgICAgICAgIHJlc3VtZUlkOiAnJywNCiAgICAgICAgICAgICAgICAgICAgY29tcGFueTogJycsDQogICAgICAgICAgICAgICAgICAgIHBvc3Q6ICcnLA0KICAgICAgICAgICAgICAgICAgICBzYWxhcnk6ICcnLA0KICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJycsDQogICAgICAgICAgICAgICAgICAgIGpvaW5EYXRlOiAnJywNCiAgICAgICAgICAgICAgICAgICAgbGVhdmVEYXRlOiAnJywNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIHJ1bGVzOiB7DQogICAgICAgICAgICAgICAgICAgIHJlc3VtZUlkOiBbe3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5b+F5aGr6aG55LiN6IO95Li656m6J31dLA0KICAgICAgICAgICAgICAgICAgICBjb21wYW55OiBbe3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5b+F5aGr6aG55LiN6IO95Li656m6J31dLA0KICAgICAgICAgICAgICAgICAgICBwb3N0OiBbe3JlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5b+F5aGr6aG55LiN6IO95Li656m6J31dLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgaXRlbXM6IFsNCiAgICAgICAgICAgICAgICAgICAge3R5cGU6ICdzZWxlY3QnLCBsYWJlbDogJ+eugOWOhicsIHByb3A6ICdyZXN1bWVJZCcsIG5hbWU6ICdyZXN1bWVJZCcsIHBsYWNlaG9sZGVyOiAn566A5Y6GJywgb3B0aW9uczogW119LA0KICAgICAgICAgICAgICAgICAgICB7dHlwZTogJ3RleHQnLCBsYWJlbDogJ+WFrOWPuOWQjeensCcsIHByb3A6ICdjb21wYW55JywgbmFtZTogJ2NvbXBhbnknLCBwbGFjZWhvbGRlcjogJ+WFrOWPuOWQjeensCd9LA0KICAgICAgICAgICAgICAgICAgICB7dHlwZTogJ3RleHQnLCBsYWJlbDogJ+iBjOS9jScsIHByb3A6ICdwb3N0JywgbmFtZTogJ3Bvc3QnLCBwbGFjZWhvbGRlcjogJ+iBjOS9jSd9LA0KICAgICAgICAgICAgICAgICAgICB7dHlwZTogJ3NlbGVjdCcsIGxhYmVsOiAn6Jaq5rC0JywgcHJvcDogJ3NhbGFyeScsIG5hbWU6ICdzYWxhcnknLCBwbGFjZWhvbGRlcjogJ+iWquawtCd9LA0KICAgICAgICAgICAgICAgICAgICB7dHlwZTogJ3RleHQnLCBsYWJlbDogJ+aPj+i/sCcsIHByb3A6ICdkZXNjcmlwdGlvbicsIG5hbWU6ICdkZXNjcmlwdGlvbicsIHBsYWNlaG9sZGVyOiAn5o+P6L+wJ30sDQogICAgICAgICAgICAgICAgICAgIHt0eXBlOiAnZGF0ZScsIGxhYmVsOiAn5YWl6IGM5pe26Ze0JywgcHJvcDogJ2pvaW5EYXRlJywgbmFtZTogJ2pvaW5EYXRlJywgcGxhY2Vob2xkZXI6ICflhaXogYzml7bpl7QnfSwNCiAgICAgICAgICAgICAgICAgICAge3R5cGU6ICdkYXRlJywgbGFiZWw6ICfnprvogYzml7bpl7QnLCBwcm9wOiAnbGVhdmVEYXRlJywgbmFtZTogJ2xlYXZlRGF0ZScsIHBsYWNlaG9sZGVyOiAn56a76IGM5pe26Ze0J30sDQogICAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBtb3VudGVkKCkgew0KICAgICAgICAgICAgdGhpcy5nZXREaWN0TGlzdDEoMyk7DQoNCiAgICAgICAgICAgIHF1ZXJ5KHt9KS50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICAgICAgbGV0IGFyciA9IFtdOw0KICAgICAgICAgICAgICAgIHJlcy5kYXRhLmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGxldCBwYXJhbSA9IHt2YWx1ZTogaXRlbS5pZCwgbGFiZWw6IGl0ZW0ubmFtZX0NCiAgICAgICAgICAgICAgICAgICAgYXJyLnB1c2gocGFyYW0pDQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zWzBdLm9wdGlvbnMgPSBhcnI7DQogICAgICAgICAgICB9KTsNCiAgICAgICAgfSwNCiAgICAgICAgbWV0aG9kczogew0KICAgICAgICAgICAgZ2V0RGljdExpc3QxKHR5cGVJZCkgew0KICAgICAgICAgICAgICAgIGRpY3RfcXVlcnkoe3R5cGVJZDogdHlwZUlkfSkudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgICAgICBsZXQgYXJyID0gW107DQogICAgICAgICAgICAgICAgICAgIHJlcy5kYXRhLmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBsZXQgcCA9IHt2YWx1ZTogaXRlbS5kaWN0S2V5LCBsYWJlbDogaXRlbS5kaWN0VmFsfTsNCiAgICAgICAgICAgICAgICAgICAgICAgIGFyci5wdXNoKHApOw0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0udHlwZSA9PSAnc2VsZWN0JyAmJiBpdGVtLm5hbWUgPT0gJ3NhbGFyeScpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLm9wdGlvbnMgPSBhcnI7DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBzYXZlKCkgew0KICAgICAgICAgICAgICAgIGxldCBmbGFnID0gdGhpcy4kcmVmc1snbXlGb3JtJ10udmFsaWRhdGVGb3JtKCk7DQogICAgICAgICAgICAgICAgaWYgKGZsYWcpIHsNCiAgICAgICAgICAgICAgICAgICAgY3JlYXRlKHRoaXMuZm9ybSkudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbS5jbG9zZSgpOw0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbS5jYWxsYmFjaygpOw0KICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg=="},{"version":3,"sources":["Add.vue"],"names":[],"mappings":";AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Add.vue","sourceRoot":"src/views/experience","sourcesContent":["<template>\r\n    <el-dialog title=\"新增\" :visible.sync=\"param.visible\" @close=\"param.close\" :close-on-click-modal=\"false\">\r\n        <r-form ref=\"myForm\" :rules=\"rules\" :form=\"form\" :items=\"items\" :save=\"save\"></r-form>\r\n    </el-dialog>\r\n</template>\r\n\r\n<script>\r\n    import {create} from \"@/api/experience\";\r\n    import {query} from \"@/api/resume\";\r\n    import RForm from \"@/components/RForm\";\r\n    import {dict_query} from \"@/api/dict\";\r\n\r\n    export default {\r\n        name: \"Add\",\r\n        components: {RForm},\r\n        props: {\r\n            param: {\r\n                type: Object,\r\n                default: () => {\r\n                }\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                form: {\r\n                    resumeId: '',\r\n                    company: '',\r\n                    post: '',\r\n                    salary: '',\r\n                    description: '',\r\n                    joinDate: '',\r\n                    leaveDate: '',\r\n                },\r\n                rules: {\r\n                    resumeId: [{required: true, message: '必填项不能为空'}],\r\n                    company: [{required: true, message: '必填项不能为空'}],\r\n                    post: [{required: true, message: '必填项不能为空'}],\r\n                },\r\n                items: [\r\n                    {type: 'select', label: '简历', prop: 'resumeId', name: 'resumeId', placeholder: '简历', options: []},\r\n                    {type: 'text', label: '公司名称', prop: 'company', name: 'company', placeholder: '公司名称'},\r\n                    {type: 'text', label: '职位', prop: 'post', name: 'post', placeholder: '职位'},\r\n                    {type: 'select', label: '薪水', prop: 'salary', name: 'salary', placeholder: '薪水'},\r\n                    {type: 'text', label: '描述', prop: 'description', name: 'description', placeholder: '描述'},\r\n                    {type: 'date', label: '入职时间', prop: 'joinDate', name: 'joinDate', placeholder: '入职时间'},\r\n                    {type: 'date', label: '离职时间', prop: 'leaveDate', name: 'leaveDate', placeholder: '离职时间'},\r\n                ]\r\n            }\r\n        },\r\n        mounted() {\r\n            this.getDictList1(3);\r\n\r\n            query({}).then(res => {\r\n                let arr = [];\r\n                res.data.forEach(item => {\r\n                    let param = {value: item.id, label: item.name}\r\n                    arr.push(param)\r\n                })\r\n                this.items[0].options = arr;\r\n            });\r\n        },\r\n        methods: {\r\n            getDictList1(typeId) {\r\n                dict_query({typeId: typeId}).then(res => {\r\n                    let arr = [];\r\n                    res.data.forEach(item => {\r\n                        let p = {value: item.dictKey, label: item.dictVal};\r\n                        arr.push(p);\r\n                    });\r\n                    this.items.forEach(item => {\r\n                        if (item.type == 'select' && item.name == 'salary') {\r\n                            item.options = arr;\r\n                        }\r\n                    })\r\n                })\r\n            },\r\n            save() {\r\n                let flag = this.$refs['myForm'].validateForm();\r\n                if (flag) {\r\n                    create(this.form).then(res => {\r\n                        this.$message.success(res.msg);\r\n                        this.param.close();\r\n                        this.param.callback();\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}